buildscript {
    repositories {
        jcenter()
        maven {
            url = 'http://files.minecraftforge.net/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

// External properties
ext.configFile = file 'build.properties'
configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

group = "com.github.wendall911.tinkersurvival"
version = config.mod_version
archivesBaseName = "TinkerSurvival"

version = "${config.minecraft_version}-${config.mod_version}"

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    mappings = config.mappings
    runDir = 'run'
    replace '@MOD_VERSION@', config.mod_version
    replace '@FORGE_VERSION@', config.forge_version
    replace '@TTL_VERSION@', config.ttl_version
    replaceIn 'TinkerSurvival.java'
    useDepAts = true
}

dependencies {
    deobfProvided "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}:api"
    runtime "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}"
    deobfCompile "slimeknights.mantle:Mantle:${config.minecraft_short_version}-${config.mantle_version}"
    deobfCompile "slimeknights:TConstruct:${config.minecraft_version}-${config.tic_version}"
}

def commonManifest = {
    attributes 'FMLAT': 'tinkersurvival_at.cfg'
}

jar {
    manifest commonManifest
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    from (sourceSets.main.output) {
        include 'LICENSE'
    }

    classifier = 'src'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output

    manifest commonManifest
    classifier = 'deobf'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        // replaces
        expand ([
            'modid': project.archivesBaseName,
            'mod_version': project.config.mod_version,
            'minecraft_version': project.config.minecraft_version
        ])
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}
